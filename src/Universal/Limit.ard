\import Cat
\import Category
\import Functor
\import Unique

\record Cone {IX : Precat} (D : Functor IX C) \extends BasePrecat {
  | tip : C
  | edge (ix : IX) : tip ->> D.ob ix
  \property cone {ix1 ix2 : IX} (f : ix1 ->> ix2) : D.map f `o` edge ix1 = edge ix2
}

\record Limit \extends Cone{
  \property universal (c' : Cone D) :
  Unique (c'.tip ->> tip) (\lam f => \Pi (ix : IX) ->  edge ix `o` f = c'.edge ix)
}

\func Cocone {C IX : Precat} (D : Functor IX C) => Cone {op C} {op IX} (Functor.fop {D})

\func Colimit {C IX : Precat} (D : Functor IX C) => Limit {op C} {op IX} (Functor.fop {D})