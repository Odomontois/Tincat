\import Equiv
\import Paths
\import Set

\func flip {A B C : \Type} (f : A -> B -> C) (b : B) (a : A) => f a b

\func setPath= {A : \Type} (R : A -> A -> \Prop)
               (refl : \Pi (a : A) -> R a a) (to= : \Pi {a a' : A} -> R a a' -> a = a')
               {a a' : A} (p q : a = a') : p = q =>
  \let eqq : QEquiv {a = a'} {R a a'} => Hedberg.propPathEquiv R refl to=
  \in inv (eqq.ret_f p) *> pmap eqq.ret (Path.inProp _ _) *> eqq.ret_f q
