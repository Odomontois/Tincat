\import Cat
\import Category
\import Iso
\import Unique
\import Paths

\record Obj (C : Precat){
  | ob : C
}

\record Terminal \extends Obj{
  \property terminal (x : C) : Singleton (x ->> ob)
  \func dual => \new Initial (op C) ob terminal
} \where {
  \func \infixl 5 term->> {C : Precat } (x : C)  (t : Terminal C) : x ->> ob => elem {t.terminal x}

  \lemma iso {C : Precat} (t t' : Terminal C) : Iso1 (t'.ob term->> t) \cowith
    | rev => elem {t'.terminal ob}
    | l_comp => singleton {t'.terminal t'.ob} _ _
    | r_comp => singleton {terminal ob} _ _

  \lemma terminal->single {C : Cat} (t : Terminal C) : Singleton (Terminal C) \cowith
    | elem => t
    | singleton => univ-term-is-prop

  \lemma univ-term-is-prop {C : Cat} (t t' : Terminal C) : t = t' =>
    \let  | t=t' : t.ob = t'.ob => Iso1.iso-to-= {C} (Terminal.iso {C} t' t)
          | p= =>  pathInProp (\lam i => \Pi (x : C) -> Singleton (x ->> (t=t' @ i))) t.terminal t'.terminal
    \in path (\lam i => \new Terminal C{
      | ob => t=t' @ i
      | terminal => p= @ i
    })
}

\record Initial \extends Obj {
  \property initial (x : C) : Singleton (ob ->> x)

  \func dual => \new Terminal (op C) ob initial
}

