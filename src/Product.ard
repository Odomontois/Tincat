\import Cat
\import Iso
\import Unique
\import lib.Paths


\record Product
 {C : Cat} (I : \Set)
 (a : I -> C.Ob)
 (p : C.Ob)
 (pi : \Pi (i : I) -> p ->> {C} a i)
 (prod : \Pi (x : C.Ob) (f : \Pi (i : I) -> x ->> {C} a i) -> Unique (x ->> {C} p) (\lam pr => \Pi (j : I) -> pi j cmp {C} pr = f j) )


\record Product2
   {C : Cat}
   (a b : Cat.Ob {C})
   (p : C.Ob)
   (pi1 : p ->> {C} a)
   (pi2 : p ->> {C} b)
   (prod : \Pi (x : C.Ob) (f : x ->> {C} a) (g : x ->> {C} b) -> Unique (x ->> {C} p) (\lam pr => \Sigma
    (pi1 cmp {C} pr = f)
    (pi2 cmp {C} pr = g)
   ))


\func product_inv {C : Cat} (a b : Cat.Ob {C}) (pab : Product2 {C} a b) : Product2 {C} b a pab.p \cowith
    | pi1 => pab.pi2
    | pi2 => pab.pi1
    | prod x f1 f2 =>
        \let orig : Unique => pab.prod x f2 f1
        \in \new Unique orig.A {
          | B pr => \Sigma (pab.pi2 cmp {C} pr = f1) (pab.pi1 cmp {C} pr = f2)
          | a => orig.a
          | b => (orig.b.2, orig.b.1)
          | unique f' prod' => orig.unique f' (prod'.2, prod'.1)
          }

\func product_symmetry {C : Cat} (a b : Cat.Ob {C}) (pab : Product2 {C} a b) : product_inv b a (product_inv a b pab) = pab => idp

\func product_associativity {C : Cat} (a b c : Cat.Ob {C})
         (pab : Product2 {C} a b)
         (pab_c : Product2 {C} pab.p c )
         (pbc : Product2 {C} b c)
         (pa_bc : Product2 {C} a pbc.p) : Iso {C} {pab_c.p} {pa_bc.p} \cowith
             | f => \let pr => \lam (P : Product2 {C}) => P.prod pab_c.p
                    \in pr pa_bc (pab.pi1 cmp {C} pab_c.pi1) ( pr pbc (pab.pi2 cmp {C} pab_c.pi1) pab_c.pi2 )
             | f_op => \let pr => \lam (P : Product2 {C}) => P.prod pa_bc.p
                       \in pr pab_c (pr pab pa_bc.pi1 (pbc.pi1 cmp {C} pa_bc.pi2)) (pbc.pi2 cmp {C} pa_bc.pi2)
             | l_comp => {?}
             | r_comp => {?}

